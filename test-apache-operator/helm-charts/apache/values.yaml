affinity: {}
cloneHtdocsFromGit:
  branch: ""
  enabled: false
  extraVolumeMounts: []
  interval: 60
  repository: ""
  resources: {}
commonAnnotations: {}
commonLabels: {}
extraDeploy: []
extraEnvVars: []
extraVolumeMounts: []
extraVolumes: []
fullnameOverride: ""
git:
  pullPolicy: IfNotPresent
  pullSecrets: []
  registry: docker.io
  repository: bitnami/git
  tag: 2.32.0-debian-10-r51
global:
  imagePullSecrets: []
  imageRegistry: ""
hostAliases:
- hostnames:
  - status.localhost
  ip: 127.0.0.1
htdocsConfigMap: ""
htdocsPVC: ""
httpdConfConfigMap: ""
image:
  debug: false
  pullPolicy: IfNotPresent
  pullSecrets: []
  registry: docker.io
  repository: bitnami/apache
  tag: 2.4.48-debian-10-r52
ingress:
  annotations: {}
  apiVersion: ""
  certManager: false
  enabled: false
  hostname: example.local
  hosts: []
  path: /
  pathType: ImplementationSpecific
  secrets: []
  tls:
  - hosts:
    - example.local
    secretName: example.local-tls
initContainers: []
kubeVersion: ""
livenessProbe:
  enabled: true
  failureThreshold: 6
  initialDelaySeconds: 180
  path: /
  periodSeconds: 20
  port: http
  successThreshold: 1
  timeoutSeconds: 5
metrics:
  enabled: false
  image:
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: docker.io
    repository: bitnami/apache-exporter
    tag: 0.10.0-debian-10-r5
  podAnnotations:
    prometheus.io/port: "9117"
    prometheus.io/scrape: "true"
  resources:
    limits: {}
    requests: {}
nameOverride: ""
nodeAffinityPreset:
  key: ""
  type: ""
  values: []
nodeSelector: {}
podAffinityPreset: ""
podAnnotations: {}
podAntiAffinityPreset: soft
podLabels: {}
readinessProbe:
  enabled: true
  failureThreshold: 6
  initialDelaySeconds: 30
  path: /
  periodSeconds: 10
  port: http
  successThreshold: 1
  timeoutSeconds: 5
replicaCount: 1
resources:
  limits: {}
  requests: {}
service:
  annotations: {}
  externalTrafficPolicy: Cluster
  httpsPort: 443
  loadBalancerIP: ""
  nodePorts:
    http: ""
    https: ""
  port: 80
  type: LoadBalancer
sidecars: []
tolerations: []
vhostsConfigMap: ""
